import threading


class CommandExecutor:
    def __init__(self, commands, output_collector):
        self.commands = commands
        self.output_collector = output_collector
        self.threads = []

    def execute_commands(self):
        for command in self.commands:
            thread = threading.Thread(target=self.run_command, args=(command,))
            self.threads.append(thread)
            thread.start()

        for thread in self.threads:
            thread.join()

    def run_command(self, command):
        import subprocess
        result = subprocess.run(command, shell=True, text=True, capture_output=True)
        self.output_collector.collect(command, result.stdout, result.stderr)
