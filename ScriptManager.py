import argparse


class ScriptManager:
    def __init__(self, script_database):
        """
        Initialize the CLI with a script database instance.
        """
        self.db = script_database

    def run(self):
        """
        Run the command line interface for the script database management.
        """
        parser = argparse.ArgumentParser(description="Manage a script database.")
        subparsers = parser.add_subparsers(dest='command', help='Commands')

        # List command
        list_parser = subparsers.add_parser('list', help='List all scripts in the database')

        # Add command
        add_parser = subparsers.add_parser('add', help='Add a new script')
        add_parser.add_argument('path', type=str, help='Relative path for the new script')
        add_parser.add_argument('content', type=str, help='Content of the new script')

        # Remove command
        remove_parser = subparsers.add_parser('remove', help='Remove a script')
        remove_parser.add_argument('path', type=str, help='Relative path of the script to remove')

        # Modify command
        modify_parser = subparsers.add_parser('modify', help='Modify an existing script')
        modify_parser.add_argument('path', type=str, help='Relative path of the script to modify')
        modify_parser.add_argument('content', type=str, help='New content for the script')

        # Parse arguments from the user
        args = parser.parse_args()
        if args.command == 'list':
            scripts = self.db.list_scripts()
            for script in scripts:
                print(script)
        elif args.command == 'add':
            self.db.add_script(args.path, args.content)
            print(f"Script added at {args.path}")
        elif args.command == 'remove':
            self.db.remove_script(args.path)
            print(f"Script removed at {args.path}")
        elif args.command == 'modify':
            self.db.modify_script(args.path, args.content)
            print(f"Script modified at {args.path}")

# Example instantiation and usage (To be used with actual CLI interaction):
# base_path = "/path/to/scripts"
# db = ScriptDatabase(base_path)
# cli = ScriptManager(db)
# cli.run()  # This would be run from the command line with arguments
