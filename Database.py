import os

class ScriptDatabase:
    def __init__(self, root_path):
        self.root_path = root_path
        self.database_path = self.find_database_dir()
        self.scripts = self.scan_for_scripts()

    def find_database_dir(self):
        # Search for a directory named "database" within the root path
        for dirpath, dirnames, filenames in os.walk(self.root_path):
            if "database" in dirnames:
                return os.path.join(dirpath, "database")
        return None

    def scan_for_scripts(self):
        scripts_dict = {}
        if self.database_path:
            for dirpath, dirnames, filenames in os.walk(self.database_path):
                for filename in filenames:
                    full_path = os.path.join(dirpath, filename)
                    relative_path = os.path.relpath(full_path, start=self.database_path)
                    description = self.extract_description(full_path)
                    scripts_dict[filename] = {
                        'location': relative_path,
                        'description': description
                    }
        return scripts_dict

    def extract_description(self, file_path):
        try:
            with open(file_path, 'r') as file:
                first_line = file.readline().strip()
            return first_line
        except IOError as e:
            print(f"Error reading file {file_path}: {e}")
            return ""

    def list_scripts(self):
        for name, details in self.scripts.items():
            print(f"{name}: Location: {details['location']}, Description: {details['description']}")

# Example usage:
# Assuming your scripts are under something like 'C:\\Users\\1312\\PycharmProjects\\produkcja\\'
db = ScriptDatabase("C:\\Users\\1312\\PycharmProjects\\produkcja\\")
db.list_scripts()
