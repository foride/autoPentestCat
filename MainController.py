import argparse
from CommandExecutor import CommandExecutor
from InputManager import InputManager
from OutputCollector import OutputCollector


class MainController:
    def __init__(self):
        self.input_manager = InputManager()
        self.output_collector = OutputCollector()

    def run(self):
        self.input_manager.main_menu()
        commands = self.input_manager.get_commands()
        print("Save output to file?(y/n)")
        answer = input("> ")

        if commands:
            executor = CommandExecutor(commands, self.output_collector)
            executor.execute_commands()
            if answer.lower() == "y":
                file_name = input("Enter output file name: ")
                self.output_collector.write_outputs_to_file(file_name)
            else:
                self.output_collector.display_outputs()
        else:
            print("No commands to execute.")


def parse_args():
    parser = argparse.ArgumentParser(description="Description of the project to be added\n")
    parser.add_argument("-v", metavar="--verbose", required=False, type=str,
                        help="display and save output in verbose mode")
    return parser.parse_args()


if __name__ == "__main__":
    args = parse_args()

    controller = MainController()
    controller.run()
